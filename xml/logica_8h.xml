<?xml version='1.0' encoding='UTF-8' standalone='no'?>
<doxygen xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance" xsi:noNamespaceSchemaLocation="compound.xsd" version="1.8.17">
  <compounddef id="logica_8h" kind="file" language="C++">
    <compoundname>logica.h</compoundname>
    <includes refid="listas_8h" local="yes">listas.h</includes>
    <includedby refid="interface_8c" local="yes">interface.c</includedby>
    <includedby refid="io_8c" local="yes">io.c</includedby>
    <includedby refid="logica_8c" local="yes">logica.c</includedby>
    <incdepgraph>
      <node id="1">
        <label>logica.h</label>
        <link refid="logica_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
      </node>
      <node id="2">
        <label>listas.h</label>
        <link refid="listas_8h_source"/>
      </node>
    </incdepgraph>
    <invincdepgraph>
      <node id="2">
        <label>interface.c</label>
        <link refid="interface_8c"/>
      </node>
      <node id="4">
        <label>logica.c</label>
        <link refid="logica_8c"/>
      </node>
      <node id="1">
        <label>logica.h</label>
        <link refid="logica_8h"/>
        <childnode refid="2" relation="include">
        </childnode>
        <childnode refid="3" relation="include">
        </childnode>
        <childnode refid="4" relation="include">
        </childnode>
      </node>
      <node id="3">
        <label>io.c</label>
        <link refid="io_8c"/>
      </node>
    </invincdepgraph>
      <sectiondef kind="func">
      <memberdef kind="function" id="logica_8h_1a51e6aa0ed978abab4422df738531b7ee" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int area_par</definition>
        <argsstring>(ESTADO *etemp, COORDENADA c)</argsstring>
        <name>area_par</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>etemp</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Estrutura Lógica. </para>
        </briefdescription>
        <detaileddescription>
<para>Estrutura Lógica.</para>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>etemp</parametername>
</parameternamelist>
<parameterdescription>
<para>estado temporário para testes; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>coordenada dada. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Verdadeiro ou falso. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.h" line="9" column="5" bodyfile="logica.c" bodystart="21" bodyend="24" declfile="logica.h" declline="9" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1aa8719fa8c8f8fb77e26a029608a2be14" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnodo" kindref="compound">LISTA</ref></type>
        <definition>LISTA area_par_possivel</definition>
        <argsstring>(LISTA l, ESTADO *e)</argsstring>
        <name>area_par_possivel</name>
        <param>
          <type><ref refid="structnodo" kindref="compound">LISTA</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que cria uma lista com as coordenadas em que, se forem jogadas o numero de jogadas possíveis do jogador adversário, fica um número par. Contudo, se não houver estes casos retorna uma lista com coordenadas possíveis de jogar. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>lista; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>estado do jogo. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Lista. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.h" line="10" column="7" bodyfile="logica.c" bodystart="35" bodyend="52" declfile="logica.h" declline="10" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a84d095ace1f8dfea9ba09adc459393b1" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int compara_coord</definition>
        <argsstring>(COORDENADA c, ESTADO *etemp)</argsstring>
        <name>compara_coord</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>etemp</declname>
          <defname>e</defname>
        </param>
        <briefdescription>
<para>Função que compara se uma coordenada é igual a uma coordenada favorável. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada da lista; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado do jogo. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Verdadeiro ou Falso. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.h" line="11" column="5" bodyfile="logica.c" bodystart="61" bodyend="67" declfile="logica.h" declline="11" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a92149d0984d39a5f1c8409009f6fb3ef" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int coordenada_valida</definition>
        <argsstring>(COORDENADA d)</argsstring>
        <name>coordenada_valida</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>d</declname>
          <defname>c</defname>
        </param>
        <briefdescription>
<para>Função que verifica se a coordenada é válida. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Verdadeiro ou falso. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.h" line="12" column="5" bodyfile="logica.c" bodystart="75" bodyend="77" declfile="logica.h" declline="12" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1ad3c7054170580d3d9c74e7d5cdd00395" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int fim_jogo</definition>
        <argsstring>(ESTADO *e)</argsstring>
        <name>fim_jogo</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que verifica se o jogo acabou. Testa todas as possibilidades de jogada. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>o número do jogador vencedor (1 ou 2) ou um número que mostra que ainda há hipoteses de jogar (3 ou mais). </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.h" line="13" column="5" bodyfile="logica.c" bodystart="85" bodyend="107" declfile="logica.h" declline="13" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a50a11c8f5ea477c3d3a82bf18d93cf47" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnodo" kindref="compound">LISTA</ref></type>
        <definition>LISTA hipord</definition>
        <argsstring>(LISTA l, ESTADO *e)</argsstring>
        <name>hipord</name>
        <param>
          <type><ref refid="structnodo" kindref="compound">LISTA</ref></type>
          <declname>l</declname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que elimina as jogadas não possíveis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista de todas as jogadas; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado do jogo; </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Uma lista com todas as jogadas possíveis. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.h" line="14" column="7" bodyfile="logica.c" bodystart="116" bodyend="141" declfile="logica.h" declline="14" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1ac733075e06b2b88d47c0a052a3c5db1e" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int jogada_favoravel</definition>
        <argsstring>(LISTA sl, ESTADO *e)</argsstring>
        <name>jogada_favoravel</name>
        <param>
          <type><ref refid="structnodo" kindref="compound">LISTA</ref></type>
          <declname>sl</declname>
          <defname>l</defname>
        </param>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <briefdescription>
<para>Função que verifica se a coordenada é jogável para as coordenadas mais favoráveis. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>l</parametername>
</parameternamelist>
<parameterdescription>
<para>Lista das jogadas possíveis; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado do jogo. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Verdadeiro ou falso. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.h" line="15" column="5" bodyfile="logica.c" bodystart="150" bodyend="166" declfile="logica.h" declline="15" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a4e68d436fd02312dbf25a0876e6fcc29" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>void</type>
        <definition>void jogar</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>jogar</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que inicia o jogo. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado recebido. </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Última coordenada recebida pelo jogador. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.h" line="16" column="6" bodyfile="logica.c" bodystart="174" bodyend="177" declfile="logica.h" declline="16" declcolumn="6"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1af2e6cfd165bd629ed993beef22140106" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structnodo" kindref="compound">LISTA</ref></type>
        <definition>LISTA l_coord_adj</definition>
        <argsstring>(COORDENADA c, int jogador)</argsstring>
        <name>l_coord_adj</name>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
          <defname>ultcrd</defname>
        </param>
        <param>
          <type>int</type>
          <declname>jogador</declname>
        </param>
        <briefdescription>
<para>Função que cria uma lista com todas as coordenadas adjacentes. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>ultcrd</parametername>
</parameternamelist>
<parameterdescription>
<para>Última coordenada do jogador; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>jogador</parametername>
</parameternamelist>
<parameterdescription>
<para>Número do jogador. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Lista. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.h" line="17" column="7" bodyfile="logica.c" bodystart="186" bodyend="204" declfile="logica.h" declline="17" declcolumn="7"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a04a0827bfb147211daa2498200d7eb76" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
        <definition>COORDENADA str_to_coord</definition>
        <argsstring>(char *coordenada)</argsstring>
        <name>str_to_coord</name>
        <param>
          <type>char *</type>
          <declname>coordenada</declname>
        </param>
        <briefdescription>
<para>Função que transforma uma string em coordenada. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>coordenada</parametername>
</parameternamelist>
<parameterdescription>
<para>String do tipo letra-numero. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Coordenada. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.h" line="18" column="12" bodyfile="logica.c" bodystart="212" bodyend="215" declfile="logica.h" declline="18" declcolumn="12"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1ac1b764c95eed782bd255c57191885747" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verifica_coord</definition>
        <argsstring>(ESTADO *e, COORDENADA c)</argsstring>
        <name>verifica_coord</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>e</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que verifica se a coordenada é válida. Para ser válido, ela precisa de ser adjacente à última coordenada e o estado da sua casa precisa de ser VAZIO, UM ou DOIS. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>e</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado recebido; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Última coordenada recebida pelo jogador. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Verdadeiro ou falso (1 ou 0, respetivamente) quanto à possibilidade da coordenada. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.h" line="19" column="5" bodyfile="logica.c" bodystart="225" bodyend="232" declfile="logica.h" declline="19" declcolumn="5"/>
      </memberdef>
      <memberdef kind="function" id="logica_8h_1a96815a1a2a72414ab5cb4eb0194107d6" prot="public" static="no" const="no" explicit="no" inline="no" virt="non-virtual">
        <type>int</type>
        <definition>int verifica_fim_jogo</definition>
        <argsstring>(ESTADO *etemp, COORDENADA c)</argsstring>
        <name>verifica_fim_jogo</name>
        <param>
          <type><ref refid="structESTADO" kindref="compound">ESTADO</ref> *</type>
          <declname>etemp</declname>
        </param>
        <param>
          <type><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref></type>
          <declname>c</declname>
        </param>
        <briefdescription>
<para>Função que verifica se, com a jogada feita, o jogo acaba. </para>
        </briefdescription>
        <detaileddescription>
<para><parameterlist kind="param"><parameteritem>
<parameternamelist>
<parametername>etemp</parametername>
</parameternamelist>
<parameterdescription>
<para>Estado temporário que serve para testes; </para>
</parameterdescription>
</parameteritem>
<parameteritem>
<parameternamelist>
<parametername>c</parametername>
</parameternamelist>
<parameterdescription>
<para>Coordenada que é jogada. </para>
</parameterdescription>
</parameteritem>
</parameterlist>
<simplesect kind="return"><para>Verdadeiro ou falso. </para>
</simplesect>
</para>
        </detaileddescription>
        <inbodydescription>
        </inbodydescription>
        <location file="logica.h" line="20" column="5" bodyfile="logica.c" bodystart="241" bodyend="244" declfile="logica.h" declline="20" declcolumn="5"/>
      </memberdef>
      </sectiondef>
    <briefdescription>
    </briefdescription>
    <detaileddescription>
    </detaileddescription>
    <programlisting>
<codeline lineno="1"><highlight class="preprocessor">#include<sp/>&quot;listas.h&quot;</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="2"><highlight class="normal"></highlight></codeline>
<codeline lineno="6"><highlight class="preprocessor">#ifndef<sp/>PROJETOLI2_LOGICA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="7"><highlight class="normal"></highlight><highlight class="preprocessor">#define<sp/>PROJETOLI2_LOGICA_H</highlight><highlight class="normal"></highlight></codeline>
<codeline lineno="8"><highlight class="normal"></highlight></codeline>
<codeline lineno="9"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8c_1a51e6aa0ed978abab4422df738531b7ee" kindref="member">area_par</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*etemp,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="10"><highlight class="normal"><ref refid="structnodo" kindref="compound">LISTA</ref><sp/><ref refid="logica_8c_1aa8719fa8c8f8fb77e26a029608a2be14" kindref="member">area_par_possivel</ref><sp/>(<ref refid="structnodo" kindref="compound">LISTA</ref><sp/>l,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="11"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8c_1aec7e4adfc2da77a07d18b65fd2777f19" kindref="member">compara_coord</ref>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*etemp);</highlight></codeline>
<codeline lineno="12"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8c_1a66daa84cc18f7f5ad56aa9572a240800" kindref="member">coordenada_valida</ref>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>d);</highlight></codeline>
<codeline lineno="13"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8c_1ad3c7054170580d3d9c74e7d5cdd00395" kindref="member">fim_jogo</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="14"><highlight class="normal"><ref refid="structnodo" kindref="compound">LISTA</ref><sp/><ref refid="logica_8c_1a50a11c8f5ea477c3d3a82bf18d93cf47" kindref="member">hipord</ref>(<ref refid="structnodo" kindref="compound">LISTA</ref><sp/>l,<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="15"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8c_1a6a6c6e37440634bfe10939149f395678" kindref="member">jogada_favoravel</ref>(<ref refid="structnodo" kindref="compound">LISTA</ref><sp/>sl,<sp/><ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e);</highlight></codeline>
<codeline lineno="16"><highlight class="normal"></highlight><highlight class="keywordtype">void</highlight><highlight class="normal"><sp/><ref refid="logica_8c_1a4e68d436fd02312dbf25a0876e6fcc29" kindref="member">jogar</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="17"><highlight class="normal"><ref refid="structnodo" kindref="compound">LISTA</ref><sp/><ref refid="logica_8c_1a9f6a1441ea6aa0784170a686da674977" kindref="member">l_coord_adj</ref><sp/>(<ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c,</highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/>jogador);</highlight></codeline>
<codeline lineno="18"><highlight class="normal"><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/><ref refid="logica_8c_1a04a0827bfb147211daa2498200d7eb76" kindref="member">str_to_coord</ref><sp/>(</highlight><highlight class="keywordtype">char</highlight><highlight class="normal"><sp/>*coordenada);</highlight></codeline>
<codeline lineno="19"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8c_1ac1b764c95eed782bd255c57191885747" kindref="member">verifica_coord</ref><sp/>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*e,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="20"><highlight class="normal"></highlight><highlight class="keywordtype">int</highlight><highlight class="normal"><sp/><ref refid="logica_8c_1a96815a1a2a72414ab5cb4eb0194107d6" kindref="member">verifica_fim_jogo</ref>(<ref refid="structESTADO" kindref="compound">ESTADO</ref><sp/>*etemp,<sp/><ref refid="structCOORDENADA" kindref="compound">COORDENADA</ref><sp/>c);</highlight></codeline>
<codeline lineno="21"><highlight class="normal"></highlight></codeline>
<codeline lineno="22"><highlight class="normal"></highlight><highlight class="preprocessor">#endif<sp/>//PROJETOLI2_LOGICA_H</highlight></codeline>
    </programlisting>
    <location file="logica.h"/>
  </compounddef>
</doxygen>
